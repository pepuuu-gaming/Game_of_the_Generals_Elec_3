<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AD00b97/A+oD4fwA+cJ1AAAAAElFTkSuQmCC
</value>
  </data>
</root>